[{"C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\index.js":"1","C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\App.js":"2","C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\reportWebVitals.js":"3","C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\components\\Login\\Login.js":"5","C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\components\\Login\\firebase.config.js":"6","C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\components\\Home\\Home.js":"7","C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\components\\SignUp\\SignUp.js":"8","C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\components\\Home\\Movie\\Movie.js":"9","C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\components\\MovieDetail\\MovieDetail.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":1281,"mtime":1608502233309,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1706,"mtime":1608502030244,"results":"15","hashOfConfig":"12"},{"size":2001,"mtime":1608483953388,"results":"16","hashOfConfig":"12"},{"size":387,"mtime":1608462141095,"results":"17","hashOfConfig":"12"},{"size":1055,"mtime":1608499645694,"results":"18","hashOfConfig":"12"},{"size":6963,"mtime":1608495167522,"results":"19","hashOfConfig":"12"},{"size":773,"mtime":1608502253137,"results":"20","hashOfConfig":"12"},{"size":1804,"mtime":1608503119637,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1752ygs",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\index.js",[],["46","47"],"C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\App.js",["48"],"C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\reportWebVitals.js",[],"C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\components\\Navbar\\Navbar.js",["49","50","51","52","53"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div>\r\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\" style={{ padding:\" 0 50px\" }} >\r\n             <NavLink to=\"/\" > <a class=\"navbar-brand\" style={{fontWeight:\"600\",fontSize: \"24px\"}}> Cinema Hall </a> </NavLink>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                <ul class=\"navbar-nav ml-auto\">\r\n                    <li class=\"nav-item active\">\r\n                        <NavLink to=\"/\" > <a class=\"nav-link\"  > Home <span class=\"sr-only\">(current)</span></a> </NavLink>\r\n                    </li>\r\n                    <li class=\"nav-item active\">\r\n                    <NavLink to=\"/\" > <a class=\"nav-link\"  > Booking <span class=\"sr-only\">(current)</span></a> </NavLink>\r\n                    </li>\r\n                    <li class=\"nav-item active\">\r\n                        <NavLink to=\"/login\" >  <a class=\"nav-link\"> Login <span class=\"sr-only\">(current)</span></a> </NavLink>\r\n                    </li>\r\n                    <li class=\"nav-item active\">\r\n                        <NavLink to=\"/signup\" >  <a class=\"nav-link\" > Sign Up <span class=\"sr-only\">(current)</span></a>  </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\components\\Login\\Login.js",["54"],"import React, { useContext } from 'react';\r\nimport './Login.scss';\r\nimport googleLogo from '../../images/logos/google-logo.png';\r\n\r\nimport firebase from \"firebase/app\"\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from \"./firebase.config\";\r\nimport { UserContext } from '../../App';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n\r\n    const [ loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n\r\n    if (firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n\r\n\r\n    const handleGoogleSignIn = () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(result => {\r\n            const {displayName, email, photoURL} = result.user;\r\n            console.log(result.user)\r\n            const signedInUser = {name: displayName, email, picture: photoURL}\r\n            setLoggedInUser(signedInUser);\r\n            // storeAuthToken();\r\n        }).catch(function(error){\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            console.log(errorCode, errorMessage);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"login\">\r\n            <Link to=\"/\" className=\"logo mb-5\" style={{ fontSize:\" 2rem\", textDecoration:\"None\"}}> Cinema Hall  </Link>\r\n\r\n            <form className=\" container login-form px-4\" action=\"\">\r\n                <h2 className=\"text-brand\"> Login with </h2>\r\n\r\n                <div onClick={handleGoogleSignIn} className=\"googleLogin\">\r\n                    <img className=\"googleLogo\" src={googleLogo} alt=\"\" />\r\n                    <p > Continue with Google</p>\r\n                </div>\r\n\r\n                <div>\r\n                    <p> Don't have an account? <Link to=\"/signup\" style={{ color: \"#3F90FC\" }}> Create an account </Link></p>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\components\\Login\\firebase.config.js",[],"C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\components\\Home\\Home.js",[],"C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\components\\SignUp\\SignUp.js",["55","56","57"],"import React, { useState, useContext } from 'react';\r\nimport './SignUp.scss'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from '../Login/firebase.config';\r\nimport { UserContext } from '../../App';\r\n\r\nconst SignUp = () => {\r\n\r\n    const [newUser, setNewUser] = useState(true);\r\n    const [user, setUser] = useState({\r\n        isSignedIn: false,\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        photo: '',\r\n    });\r\n\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    let { from } = location.state || { from: { pathname: \"/booking\" } };\r\n\r\n    if(firebase.apps.length === 0){\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleResponse = (res, redirect) => {\r\n        setUser(res);\r\n        setLoggedInUser(res);\r\n        if (redirect) {\r\n            history.replace(from);\r\n        }\r\n    }\r\n\r\n    const createUserWithEmailAndPassword = (name,email, password) =>{\r\n        return firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then(res => {\r\n            const newUserInfo = res.user;\r\n            newUserInfo.error = \"\";\r\n            newUserInfo.success = true;\r\n            updateUserInfo(name);\r\n            verifyEmail();\r\n            return newUserInfo;\r\n        })\r\n        .catch((error) =>{\r\n            const newUserInfo = {}\r\n            newUserInfo.error =  error.message;\r\n            newUserInfo.success = false;\r\n            return newUserInfo;\r\n          });\r\n    }\r\n\r\n    const updateUserInfo = (name) => {\r\n        const user = firebase.auth().currentUser;\r\n    \r\n        user.updateProfile({\r\n        displayName: name,\r\n        }).then(function() {\r\n        // Update successful.\r\n        console.log('user name updated successfully')\r\n        }).catch(function(error) {\r\n        // An error happened.\r\n        console.log(error);\r\n        });\r\n    }\r\n    \r\n    const verifyEmail = () => {\r\n        var user = firebase.auth().currentUser;\r\n    \r\n        user.sendEmailVerification()\r\n        .then(function() {\r\n        // Email sent.\r\n        }).catch(function(error) {\r\n        // An error happened.\r\n        });\r\n    }\r\n\r\n    const signInWithEmailAndPassword = (email, password) =>{\r\n        return firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then(res => {\r\n          const newUserInfo = res.user;\r\n          newUserInfo.error = '';\r\n          newUserInfo.success = true;\r\n          return newUserInfo;\r\n        })\r\n        .catch(function(error) {\r\n          const newUserInfo = {};\r\n          newUserInfo.error = error.message;\r\n          newUserInfo.success = false;\r\n          return newUserInfo;\r\n        });\r\n     }\r\n\r\n    const handleSubmit = (e) => {\r\n        if (newUser && user.name && user.password) {\r\n            createUserWithEmailAndPassword(user.name, user.email, user.password)\r\n                .then(res => {\r\n                    handleResponse(res, true);\r\n                })\r\n        }\r\n        if (!newUser && user.email && user.password) {\r\n            signInWithEmailAndPassword(user.email, user.password)\r\n                .then(res => {\r\n                    handleResponse(res, true);\r\n                })\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    \r\n    const [ errors, setErrors] = useState({});\r\n    const [success, setSuccess] = useState({});\r\n    const [initialPassword, setInitialPassword] = useState(' ');\r\n    const handleBlur = (e) => {\r\n        let isFieldValid = true;\r\n        \r\n        if (e.target.name === \"email\") {\r\n            isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value)\r\n            ?errors[\"email\"]=\"\"\r\n            :errors[\"email\"] = \"Please enter valid email address.\";\r\n        }\r\n        \r\n        if (e.target.name === \"initial_password\") {\r\n            const isPasswordValid = e.target.value.length > 6;\r\n            const passwordHasNumber = /\\d{1}/.test(e.target.value);\r\n            if(isPasswordValid && passwordHasNumber){\r\n                setInitialPassword(e.target.value);\r\n                success[\"initial_password\"] = 'Password have a number & characters';\r\n                errors[\"initial_password\"] = \"\";\r\n            }\r\n            else{\r\n                errors[\"initial_password\"] = \" Password should have a number & 6 characters\";\r\n                success[\"initial_password\"] = '';\r\n            }\r\n        }\r\n        let password;\r\n        if (e.target.name === \"password\") {\r\n            password = e.target.value;\r\n            if(JSON.stringify(password)===JSON.stringify(initialPassword)){\r\n                isFieldValid= true;\r\n                success[\"password\"] = 'Password matched';\r\n                errors[\"password\"] = \"\";\r\n            }\r\n            else{\r\n                errors[\"password\"] = \"Password doesn't match! Please ry again\";\r\n                success[\"password\"] = '';\r\n            }\r\n            \r\n        }\r\n        \r\n        if (isFieldValid) {\r\n            const newUserInfo = { ...user };\r\n            newUserInfo[e.target.name] = e.target.value;\r\n            setUser(newUserInfo);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"signup\" style={{marginBottom: \"4rem\"}}>\r\n\r\n                <form onSubmit={handleSubmit} className=\"form\">\r\n                    <h1> Create an account </h1>\r\n                    <input onBlur={handleBlur} placeholder=\"First Name \" type=\"text\" name=\"name\" id=\"\" />\r\n                        <p style={{color: 'red'}}> {errors.name} </p>\r\n                    \r\n                    <input placeholder=\"Last Name\" type=\"text\" name=\"lName\" id=\"\" />\r\n        \r\n                    <input onBlur={handleBlur} placeholder=\"Username or Email\" type=\"text\" name=\"email\" required id=\"\" />\r\n                        <p style={{color: 'red'}}> {errors.email} </p>\r\n                    \r\n                    <input onBlur={handleBlur} placeholder=\"Password\" type=\"password\"   name=\"initial_password\" required id=\"\" />\r\n                        <p style={{color: 'green'}}> {success.initial_password} </p>\r\n                        <p style={{color: 'red'}}> {errors.initial_password} </p>\r\n                    \r\n                    <input onBlur={handleBlur} placeholder=\"Confirm Password\" type=\"password\" name=\"password\" required id=\"\" />\r\n                        <p style={{color: 'green'}}> {success.password} </p>\r\n                        <p style={{color: 'red'}}> {errors.password} </p>\r\n\r\n                    <input className=\"button\" type=\"submit\" value=\"Create an Account\" />\r\n\r\n                    <p className=\"login__option__forgot\"> Already have an account? <Link to=\"/login\" onChange={() => setNewUser(!newUser)} className=\"orange\"> Login </Link></p>\r\n\r\n                </form>\r\n\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;","C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\components\\Home\\Movie\\Movie.js",[],"C:\\Users\\MIF\\Desktop\\Client Projects\\Interview task\\Programming-Hero Task\\Client\\cinema-hall\\src\\components\\MovieDetail\\MovieDetail.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":12},{"ruleId":"66","severity":1,"message":"67","line":8,"column":32,"nodeType":"68","endLine":8,"endColumn":100},{"ruleId":"66","severity":1,"message":"67","line":15,"column":43,"nodeType":"68","endLine":15,"endColumn":65},{"ruleId":"66","severity":1,"message":"67","line":18,"column":39,"nodeType":"68","endLine":18,"endColumn":61},{"ruleId":"66","severity":1,"message":"67","line":21,"column":49,"nodeType":"68","endLine":21,"endColumn":69},{"ruleId":"66","severity":1,"message":"67","line":24,"column":50,"nodeType":"68","endLine":24,"endColumn":71},{"ruleId":"62","severity":1,"message":"69","line":13,"column":13,"nodeType":"64","messageId":"65","endLine":13,"endColumn":25},{"ruleId":"62","severity":1,"message":"69","line":20,"column":12,"nodeType":"64","messageId":"65","endLine":20,"endColumn":24},{"ruleId":"62","severity":1,"message":"70","line":117,"column":21,"nodeType":"64","messageId":"65","endLine":117,"endColumn":30},{"ruleId":"62","severity":1,"message":"71","line":118,"column":21,"nodeType":"64","messageId":"65","endLine":118,"endColumn":31},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'loggedInUser' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]